// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Game renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Game />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          Tiles Game
        </ForwardRef>,
        <ForwardRef>
          Step: 
          1
        </ForwardRef>,
        <TilesWrapper
          tiles={
            Array [
              Object {
                "color": "red",
                "unique": false,
              },
              Object {
                "color": "red",
                "unique": false,
              },
              Object {
                "color": "red",
                "unique": false,
              },
              Object {
                "color": "red",
                "unique": false,
              },
            ]
          }
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Tiles Game",
        },
        "ref": null,
        "rendered": "Tiles Game",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": true,
            "rules": Array [
              "
  text-transform: uppercase;
  display: flex;
  justify-content: center;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Step: ",
            1,
          ],
        },
        "ref": null,
        "rendered": Array [
          "Step: ",
          1,
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ifAKCX",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  justify-content: center;
  margin-top: 8px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ifAKCX",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "tiles": Array [
            Object {
              "color": "red",
              "unique": false,
            },
            Object {
              "color": "red",
              "unique": false,
            },
            Object {
              "color": "red",
              "unique": false,
            },
            Object {
              "color": "red",
              "unique": false,
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            Tiles Game
          </ForwardRef>,
          <ForwardRef>
            Step: 
            1
          </ForwardRef>,
          <TilesWrapper
            tiles={
              Array [
                Object {
                  "color": "red",
                  "unique": false,
                },
                Object {
                  "color": "red",
                  "unique": false,
                },
                Object {
                  "color": "red",
                  "unique": false,
                },
                Object {
                  "color": "red",
                  "unique": false,
                },
              ]
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Tiles Game",
          },
          "ref": null,
          "rendered": "Tiles Game",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "rules": Array [
                "
  text-transform: uppercase;
  display: flex;
  justify-content: center;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Step: ",
              1,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Step: ",
            1,
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ifAKCX",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  justify-content: center;
  margin-top: 8px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ifAKCX",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "tiles": Array [
              Object {
                "color": "red",
                "unique": false,
              },
              Object {
                "color": "red",
                "unique": false,
              },
              Object {
                "color": "red",
                "unique": false,
              },
              Object {
                "color": "red",
                "unique": false,
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
